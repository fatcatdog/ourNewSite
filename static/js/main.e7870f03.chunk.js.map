{"version":3,"sources":["blogRepo lazy /^/.//.*//index/.md$/ groupOptions: {} namespace object","components/Header.js","components/Footer.js","utils/stuff.js","components/Projects.js","components/About.js","components/Contact.js","components/Blogs.js","components/Blog.js","components/NoMatchPage.js","serviceWorker.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","Header","className","to","Footer","href","blogsDetails","tag","name","ourDate","ourUrl","data","description","url","demoUrl","screenshot","Projects","project","key","rel","target","About","Contact","Blogs","blogItem","pathname","Blog","props","useState","content","setContent","a","ourString","location","ourBlogTag","slice","ourBlogObj","filter","obj","theUrl","words","split","file","console","log","default","fetch","response","text","err","useEffect","getBlogFromFileSys","source","escapeHtml","NoMatchPage","Boolean","window","hostname","match","routing","exact","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e7870f03.chunk.js","sourcesContent":["var map = {\n\t\"./2017-11-17-project-in-production/index.md\": [\n\t\t139,\n\t\t3\n\t],\n\t\"./anotherFakeBlog/index.md\": [\n\t\t140,\n\t\t4\n\t],\n\t\"./fakeBlog/index.md\": [\n\t\t141,\n\t\t5\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 137;\nmodule.exports = webpackAsyncContext;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/Header.css';\n\nfunction Header() {\n  return(\n    <div className=\"everythingInHeader\">\n      <ul className=\"linksInHeader\">\n         <li><Link to=\"/projects\">Projects</Link></li>\n         <li><Link to=\"/blogs\">Blogs</Link></li>\n         <li><Link to=\"/about\">About</Link></li>\n         <li><Link to=\"/contact\">Contact</Link></li>\n      </ul>\n    </div>\n  )\n}\n\nexport default Header;\n","import React from 'react';\nimport '../styles/Footer.css';\n\nfunction Footer() {\n  return(\n    <div className=\"footerStuff\">\n      <p>I just felt like I needed a footer. Feel free to reach me <a href=\"https://twitter.com/jakeduchen\">@jakeduchen</a></p>\n      <p></p>\n    </div>\n  )\n}\nexport default Footer;\n","export const projects = [\n  {name:\"SpringJpaVueJsTodoApp\", description: \"A web app to manage personal tasks built with VueJs, Java 8, SpringBoot, JPA, MySql, Docker Compose\", url: \"https://github.com/fatcatdog/SpringJpaVueJsTodoApp\", demoUrl: \"\", screenshot: \"\" },\n  {name:\"hotOrNot\", description: \"A web app built to host, comment, and rank images of hamburgers (any image really) built in SpringBoot, Spring Security, JSP, JDBC, MySql, AWS S3 buckets for image hosting, AWS EB\", url: \"https://github.com/fatcatdog/hamburgerApp/tree/master/hotornot\", demoUrl: \"\", screenshot: \"\" },\n  {name:\"BlogCity\", description: \"This project was actually my first SpringBoot, Spring Security, and SQL project. A 'Medium' blogging platform clone built with SpringBoot, Spring Security, JSP, JDBC, Oracle AWS RDS, and AWS EB\", demoUrl: \"http://ec2-18-235-222-8.compute-1.amazonaws.com/\", url: \"https://github.com/fatcatdog/SpringBlog\", screenshot: \"\"},\n  {name:\"WikipediaReader\", description: \"App built utilizing WikiPedia API, JQuery, and Normalize CSS\", url: \"https://codepen.io/fatcatdog/pen/aGbrga\", demoUrl: \"https://codepen.io/fatcatdog/full/aGbrga/\", screenshot: \"\" },\n  {name:\"UsingWeatherGovApiWithReact\", description: \"Web App built to explore api.weather.gov and its various api endpoints using React.\", url: \"https://github.com/fatcatdog/UsingWeatherGovApiWithReact\", demoUrl: \"\", screenshot: \"\" },\n  {name:\"My old portfolio site\", description: \"Built with Create React App\", url: \"https://github.com/fatcatdog/simple_react_site\", demoUrl: \"\", screenshot: \"\" },\n];\n\n  // {name:\"\", description: \"\", url: \"\", demoUrl: \"\", screenshot: \"\" },\n\nexport const blogsDetails = [\n  {tag:3, name:\"Another Fake Blog Post\", ourDate:\"2-7-2020\", ourUrl:\"../blogRepo/anotherFakeBlog/index.md\"},\n  {tag:2, name:\"Fake Blog Post\", ourDate:\"2-6-2020\", ourUrl:\"../blogRepo/fakeBlog/index.md\"},\n  {tag:1, name:\"Build basic D3.js(D3 Plus) Data Visualizations with your Email Data\", ourDate:\"11-17-2017\", ourUrl:\"../blogRepo/2017-11-17-project-in-production/index.md\"}\n];\n","import React from 'react';\nimport Header from './Header';\nimport Footer from './Footer';\nimport '../styles/Projects.css';\nimport { projects } from '../utils/stuff';\n\nlet data = projects;\n\nconst Projects = () => {\n  return(\n    <div>\n      <Header />\n      <div className=\"projectsHeader\">\n        <h2>Personal Projects</h2>\n      </div>\n      <div className=\"projectsContainer\">\n      <div className=\"listOfProjects\">\n        <p>Below are web apps I've built over the last few years:</p>\n        <ul className=\"ourListStyles\">\n           {data.map(project => (\n             <li key={project.name}>\n                <div className=\"projectTitle\">\n                  {project.name}\n                </div>\n                 <br />\n                 <div className=\"projectDescription\">\n                   {project.description}{\" - \"}<a className=\"project_link\" href={project.url} rel=\"noreferrer noopener\" target=\"_blank\">Repo</a>\n                 </div>\n            <br />\n           </li>\n           ))}\n           <br />\n         </ul>\n      </div>\n      </div>\n      <Footer />\n    </div>\n  )\n}\n\nexport default Projects;\n","import React from 'react';\nimport Header from './Header';\nimport Footer from './Footer';\nimport '../styles/About.css';\n\nfunction About() {\n  return(\n    <div>\n      <Header />\n        <div className=\"aboutHeader\">\n          <h2>About</h2>\n        </div>\n\n      <div className=\"aboutContainer\">\n        <div className=\"aboutMeParagraph\">\n          <p>After working in software sales for a few years I realized I wanted to learn how to build digital products and learn to code. I currently work as a developer in the financial services industry in the New York area. In my free time I can likely be found playing pickup basketball or staring at a computer screen. If you would like to get in touch with me I can be reached <a href=\"https://twitter.com/jakeduchen\">@jakeduchen</a></p>\n      </div>\n    </div>\n\n    <Footer />\n    </div>\n  )\n}\n\nexport default About;\n","import React from 'react';\nimport Header from './Header';\nimport Footer from './Footer';\nimport '../styles/Contact.css';\n\nfunction Contact() {\n\n\n\n  return(\n    <div>\n    <Header />\n      <ul className=\"ourList\">\n         <li className=\"card\">\n           <div className=\"innerText\">\n           <a href=\"https://github.com/fatcatdog\">GitHub</a>\n           </div>\n         </li>\n         <li className=\"card\">\n           <div className=\"innerText\">\n           <a href=\"https://www.linkedin.com/in/jakeduchen/\">LinkedIn</a>\n           </div>\n         </li>\n         <li className=\"card\">\n           <div className=\"innerText\">\n            <a href=\"https://twitter.com/jakeduchen\">Twitter</a>\n           </div>\n         </li>\n      </ul>\n\n    <Footer />\n    </div>\n  )\n}\n\nexport default Contact;\n","import React from \"react\";\nimport Header from './Header';\nimport Footer from './Footer';\nimport '../styles/Blogs.css';\nimport { Link } from 'react-router-dom'\n// import ReactMarkdown from 'react-markdown';\nimport { blogsDetails } from '../utils/stuff';\n\nlet data = blogsDetails;\n\nconst Blogs = () => {\n\n  return(\n    <div>\n      <Header />\n        <div className=\"projectsHeader\">\n          <h2>Blogs</h2>\n        </div>\n\n        <div className=\"projectsContainer\">\n        <div className=\"listOfProjects\">\n          <ul className=\"ourListStyles\">\n             {data.map(blogItem => (\n               <li key={blogItem.ourUrl}>\n               <Link\n                 to={{pathname: '/blog/' + blogItem.tag}}>{blogItem.name}\n               </Link> - {blogItem.ourDate}<br/><br/>\n               </li>\n             ))}\n           </ul>\n        </div>\n      </div>\n\n      <Footer />\n    </div>\n  )\n}\nexport default Blogs;\n","import React, { useState, useEffect } from \"react\";\nimport 'github-markdown-css'\nimport Header from './Header';\nimport Footer from './Footer';\nimport '../styles/Blog.css';\nimport ReactMarkdown from 'react-markdown';\nimport { blogsDetails } from '../utils/stuff';\n\n   const Blog = (props) => {\n     const[content, setContent] = useState(\"Not a null string\");\n     // const[loading, setLoading] = useState(true);\n\n     async function getBlogFromFileSys(){\n       let ourString = props.location.pathname;\n       let ourBlogTag = ourString.slice(6);\n       let ourBlogObj = blogsDetails.filter(obj => {\n         return obj.tag == ourBlogTag;\n       })\n       const theUrl = ourBlogObj[0].ourUrl;\n       var words = theUrl.split(\"/\")\n       let file = await import(`../blogRepo/${words[2]}/index.md`);\n       try{\n         console.log(file.default)\n         fetch(file.default)\n         .then((response) => response.text())\n         .then((response) => {\n            setContent(response);\n         })\n       } catch (err) {\n         console.log(err)\n       }\n     }\n\n    useEffect(() => {\n        getBlogFromFileSys();\n    });\n\n    return (\n    <div>\n      <Header />\n      <div className='settingMargins'>\n        <div className='markdown-body'>\n          <ReactMarkdown\n            source={content}\n            escapeHtml={false}\n          />\n        </div>\n      </div>\n      <Footer />\n    </div>\n  )\n}\n\nexport default Blog;\n","import React from 'react';\nimport Header from './Header';\nimport Footer from './Footer';\n\nfunction NoMatchPage() {\n  return(\n    <div>\n      <Header />\n      <h2>NoMatchPage</h2>\n      <Footer />\n    </div>\n  )\n}\n\nexport default NoMatchPage;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Projects from './components/Projects';\nimport About from './components/About';\nimport Contact from './components/Contact';\nimport Blogs from './components/Blogs';\nimport Blog from './components/Blog';\nimport NoMatchPage from './components/NoMatchPage';\n\nimport * as serviceWorker from './serviceWorker';\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\n\nconst routing = (\n  <Router>\n    <div>\n      <Switch>\n      <Route exact path=\"/\" component={Blogs} />\n      <Route exact path=\"/projects\" component={Projects} />\n      <Route exact path=\"/about\" component={About} />\n      <Route exact path=\"/contact\" component={Contact} />\n      <Route exact path=\"/blogs\" component={Blogs} />\n      <Route path=\"/blog/:tag\" component={Blog} />\n      <Route component={NoMatchPage} />\n      </Switch>\n\n    </div>\n  </Router>\n);\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}